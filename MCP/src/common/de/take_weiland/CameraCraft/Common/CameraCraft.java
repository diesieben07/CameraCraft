package de.take_weiland.CameraCraft.Common;

import java.util.Arrays;
import java.util.logging.Logger;

import net.minecraft.src.CreativeTabs;
import net.minecraft.src.EntityPlayer;
import net.minecraft.src.Item;
import net.minecraft.src.ItemStack;
import net.minecraft.src.StringTranslate;
import net.minecraftforge.common.Configuration;
import cpw.mods.fml.common.FMLCommonHandler;
import cpw.mods.fml.common.FMLLog;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.Mod.Init;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.Mod.PostInit;
import cpw.mods.fml.common.Mod.PreInit;
import cpw.mods.fml.common.Side;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.network.NetworkMod;
import cpw.mods.fml.common.network.NetworkRegistry;
import cpw.mods.fml.common.registry.EntityRegistry;
import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.common.registry.TickRegistry;
import de.take_weiland.CameraCraft.Client.PhotoSizeInfo;
import de.take_weiland.CameraCraft.Common.Blocks.CameraCraftBlock;
import de.take_weiland.CameraCraft.Common.Entities.EntityCamera;
import de.take_weiland.CameraCraft.Common.Entities.EntityPhoto;
import de.take_weiland.CameraCraft.Common.Gui.GuiHandler;
import de.take_weiland.CameraCraft.Common.Network.PacketHandler;
import de.take_weiland.CameraCraft.Common.Network.ConnectionHandler;
import de.take_weiland.CameraCraft.Common.Recipes.CameraCraftRecipes;

@Mod(modid = "CameraCraft", version = "2.1", name = "CameraCraft")
@NetworkMod(versionBounds = "[2.1]", channels = { "CameraCraft" }, packetHandler = PacketHandler.class, connectionHandler = ConnectionHandler.class, clientSideRequired = true, serverSideRequired = false)
public class CameraCraft {
	
	public static CreativeTabs theCreativeTab;
	
	public static Configuration conf;
	
	@Instance
	public static CameraCraft instance;
	
	public static Logger logger;
	
	@SidedProxy(clientSide = "de.take_weiland.CameraCraft.Client.CameraCraftClientProxy", serverSide = "de.take_weiland.CameraCraft.Common.CameraCraftCommonProxy")
	public static CameraCraftCommonProxy proxy;
	
	@PreInit
	public static void preInit(FMLPreInitializationEvent evt) {
		logger = Logger.getLogger("CameraCraft");
		logger.setParent(FMLLog.getLogger());
		logger.setUseParentHandlers(true);
		
		logger.info("Version " + evt.getModMetadata().version + " preInitializing... (c) 2012 by Take Weiland (diesieben07)");
		
		ModMetadata metadata = evt.getModMetadata();
		metadata.authorList = Arrays.asList("Take Weiland (diesieben07)");
		metadata.autogenerated = false;
		metadata.credits = "ChemicNova, anicet74, FreqMan, Tomlija";
		metadata.description = "CameraCraft allows you to craft cameras and take photos which you can hang on the wall. All in Minecraft!\nCredits:\nChemicNova and anicet74 for textures and Ideas\nFreqMan and Tomlija for sounds";
		
		
		conf = new Configuration(evt.getSuggestedConfigurationFile());
		conf.load();
		ConfigurationManager.initDefaults(conf);
		conf.save();
		proxy.preInit();
		
	}
	
	@Init
	public static void init(FMLInitializationEvent evt) {
		
		logger.info("initializing...");
		
		theCreativeTab = new CreativeTab();
		
		CameraCraftBlock.registerBlocks();
		
		proxy.registerClientStuff();
		
		CameraCraftRecipes.registerRecipes();
		
		if (FMLCommonHandler.instance().getSide() == Side.SERVER) {
			CameraCraftRecipes.enableRecipesAndItems();
		}
		
		Localization.addLocalizations();
		
		int photoEntityId = EntityRegistry.findGlobalUniqueEntityId();
		EntityRegistry.registerGlobalEntityID(EntityPhoto.class, "photo", photoEntityId);
		EntityRegistry.registerModEntity(EntityPhoto.class, "photo", photoEntityId, instance, 160, Integer.MAX_VALUE, false);
		
		int cameraEntityId = EntityRegistry.findGlobalUniqueEntityId();
		EntityRegistry.registerGlobalEntityID(EntityCamera.class, "CameraCraftCamera", cameraEntityId);
		EntityRegistry.registerModEntity(EntityCamera.class, "CameraCraftCamera", cameraEntityId, instance, 160, 3, true);
		
		NetworkRegistry.instance().registerGuiHandler(instance, GuiHandler.instance());
		
		TickRegistry.registerTickHandler(CommonTickHandler.instance(), Side.SERVER);
		
		Achievements.init();
		
		GameRegistry.registerCraftingHandler(new Achievements());
	}
	
	@PostInit
	public static void postInit(FMLPostInitializationEvent evt) {
		logger.info("PostIntializing...");
		IndustrialCraftManager.init();
	}
}